package com.xmu.oomall.model.po;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

public class FlashSalePoExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public FlashSalePoExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFalshDateIsNull() {
            addCriterion("falsh_date is null");
            return (Criteria) this;
        }

        public Criteria andFalshDateIsNotNull() {
            addCriterion("falsh_date is not null");
            return (Criteria) this;
        }

        public Criteria andFalshDateEqualTo(LocalDate value) {
            addCriterion("falsh_date =", value, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateNotEqualTo(LocalDate value) {
            addCriterion("falsh_date <>", value, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateGreaterThan(LocalDate value) {
            addCriterion("falsh_date >", value, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateGreaterThanOrEqualTo(LocalDate value) {
            addCriterion("falsh_date >=", value, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateLessThan(LocalDate value) {
            addCriterion("falsh_date <", value, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateLessThanOrEqualTo(LocalDate value) {
            addCriterion("falsh_date <=", value, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateIn(List<LocalDate> values) {
            addCriterion("falsh_date in", values, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateNotIn(List<LocalDate> values) {
            addCriterion("falsh_date not in", values, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateBetween(LocalDate value1, LocalDate value2) {
            addCriterion("falsh_date between", value1, value2, "falshDate");
            return (Criteria) this;
        }

        public Criteria andFalshDateNotBetween(LocalDate value1, LocalDate value2) {
            addCriterion("falsh_date not between", value1, value2, "falshDate");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdIsNull() {
            addCriterion("time_seg_id is null");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdIsNotNull() {
            addCriterion("time_seg_id is not null");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdEqualTo(Integer value) {
            addCriterion("time_seg_id =", value, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdNotEqualTo(Integer value) {
            addCriterion("time_seg_id <>", value, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdGreaterThan(Integer value) {
            addCriterion("time_seg_id >", value, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("time_seg_id >=", value, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdLessThan(Integer value) {
            addCriterion("time_seg_id <", value, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdLessThanOrEqualTo(Integer value) {
            addCriterion("time_seg_id <=", value, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdIn(List<Integer> values) {
            addCriterion("time_seg_id in", values, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdNotIn(List<Integer> values) {
            addCriterion("time_seg_id not in", values, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdBetween(Integer value1, Integer value2) {
            addCriterion("time_seg_id between", value1, value2, "timeSegId");
            return (Criteria) this;
        }

        public Criteria andTimeSegIdNotBetween(Integer value1, Integer value2) {
            addCriterion("time_seg_id not between", value1, value2, "timeSegId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flash_sale
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table flash_sale
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}